//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\AutoStepLexer.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AutoStep.Compiler.Parser {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class AutoStepLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		FEATURE=1, SCENARIO=2, BACKGROUND=3, TAG=4, OPTION=5, NEWLINE=6, WORD=7, 
		WS=8, TEXT_COMMENT=9, GIVEN=10, WHEN=11, THEN=12, AND=13;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"FEATURE", "SCENARIO", "BACKGROUND", "TAG", "OPTION", "NEWLINE", "WORD", 
		"WS", "TEXT_COMMENT", "GIVEN", "WHEN", "THEN", "AND"
	};


	public AutoStepLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AutoStepLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Feature:'", "'Scenario:'", "'Background:'", null, null, null, 
		null, null, null, "'Given '", "'When '", "'Then '", "'And '"
	};
	private static readonly string[] _SymbolicNames = {
		null, "FEATURE", "SCENARIO", "BACKGROUND", "TAG", "OPTION", "NEWLINE", 
		"WORD", "WS", "TEXT_COMMENT", "GIVEN", "WHEN", "THEN", "AND"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AutoStepLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AutoStepLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xF', '\x84', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x6', '\x5', '?', '\n', 
		'\x5', '\r', '\x5', '\xE', '\x5', '@', '\x3', '\x6', '\x3', '\x6', '\x6', 
		'\x6', '\x45', '\n', '\x6', '\r', '\x6', '\xE', '\x6', '\x46', '\x3', 
		'\a', '\a', '\a', 'J', '\n', '\a', '\f', '\a', '\xE', '\a', 'M', '\v', 
		'\a', '\x3', '\a', '\x5', '\a', 'P', '\n', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x6', '\b', 'U', '\n', '\b', '\r', '\b', '\xE', '\b', 'V', 
		'\x3', '\t', '\x6', '\t', 'Z', '\n', '\t', '\r', '\t', '\xE', '\t', '[', 
		'\x3', '\n', '\a', '\n', '_', '\n', '\n', '\f', '\n', '\xE', '\n', '\x62', 
		'\v', '\n', '\x3', '\n', '\x3', '\n', '\a', '\n', '\x66', '\n', '\n', 
		'\f', '\n', '\xE', '\n', 'i', '\v', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x2', '\x2', '\xF', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x3', '\x2', '\x6', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', 
		'\x61', '\x63', '|', '\x4', '\x2', '\v', '\v', '\"', '\"', '\x6', '\x2', 
		'\v', '\f', '\xF', '\xF', '\"', '\"', '%', '%', '\x4', '\x2', '\f', '\f', 
		'\xF', '\xF', '\x2', '\x8B', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x5', '&', '\x3', '\x2', '\x2', '\x2', 
		'\a', '\x30', '\x3', '\x2', '\x2', '\x2', '\t', '<', '\x3', '\x2', '\x2', 
		'\x2', '\v', '\x42', '\x3', '\x2', '\x2', '\x2', '\r', 'K', '\x3', '\x2', 
		'\x2', '\x2', '\xF', 'T', '\x3', '\x2', '\x2', '\x2', '\x11', 'Y', '\x3', 
		'\x2', '\x2', '\x2', '\x13', '`', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'l', '\x3', '\x2', '\x2', '\x2', '\x17', 's', '\x3', '\x2', '\x2', '\x2', 
		'\x19', 'y', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x7F', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x1E', '\a', 'H', '\x2', '\x2', '\x1E', '\x1F', 
		'\a', 'g', '\x2', '\x2', '\x1F', ' ', '\a', '\x63', '\x2', '\x2', ' ', 
		'!', '\a', 'v', '\x2', '\x2', '!', '\"', '\a', 'w', '\x2', '\x2', '\"', 
		'#', '\a', 't', '\x2', '\x2', '#', '$', '\a', 'g', '\x2', '\x2', '$', 
		'%', '\a', '<', '\x2', '\x2', '%', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'&', '\'', '\a', 'U', '\x2', '\x2', '\'', '(', '\a', '\x65', '\x2', '\x2', 
		'(', ')', '\a', 'g', '\x2', '\x2', ')', '*', '\a', 'p', '\x2', '\x2', 
		'*', '+', '\a', '\x63', '\x2', '\x2', '+', ',', '\a', 't', '\x2', '\x2', 
		',', '-', '\a', 'k', '\x2', '\x2', '-', '.', '\a', 'q', '\x2', '\x2', 
		'.', '/', '\a', '<', '\x2', '\x2', '/', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x30', '\x31', '\a', '\x44', '\x2', '\x2', '\x31', '\x32', '\a', '\x63', 
		'\x2', '\x2', '\x32', '\x33', '\a', '\x65', '\x2', '\x2', '\x33', '\x34', 
		'\a', 'm', '\x2', '\x2', '\x34', '\x35', '\a', 'i', '\x2', '\x2', '\x35', 
		'\x36', '\a', 't', '\x2', '\x2', '\x36', '\x37', '\a', 'q', '\x2', '\x2', 
		'\x37', '\x38', '\a', 'w', '\x2', '\x2', '\x38', '\x39', '\a', 'p', '\x2', 
		'\x2', '\x39', ':', '\a', '\x66', '\x2', '\x2', ':', ';', '\a', '<', '\x2', 
		'\x2', ';', '\b', '\x3', '\x2', '\x2', '\x2', '<', '>', '\a', '\x42', 
		'\x2', '\x2', '=', '?', '\t', '\x2', '\x2', '\x2', '>', '=', '\x3', '\x2', 
		'\x2', '\x2', '?', '@', '\x3', '\x2', '\x2', '\x2', '@', '>', '\x3', '\x2', 
		'\x2', '\x2', '@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x42', '\x44', '\a', '&', '\x2', '\x2', '\x43', 
		'\x45', '\t', '\x2', '\x2', '\x2', '\x44', '\x43', '\x3', '\x2', '\x2', 
		'\x2', '\x45', '\x46', '\x3', '\x2', '\x2', '\x2', '\x46', '\x44', '\x3', 
		'\x2', '\x2', '\x2', '\x46', 'G', '\x3', '\x2', '\x2', '\x2', 'G', '\f', 
		'\x3', '\x2', '\x2', '\x2', 'H', 'J', '\t', '\x3', '\x2', '\x2', 'I', 
		'H', '\x3', '\x2', '\x2', '\x2', 'J', 'M', '\x3', '\x2', '\x2', '\x2', 
		'K', 'I', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\x3', '\x2', '\x2', '\x2', 
		'L', 'O', '\x3', '\x2', '\x2', '\x2', 'M', 'K', '\x3', '\x2', '\x2', '\x2', 
		'N', 'P', '\a', '\xF', '\x2', '\x2', 'O', 'N', '\x3', '\x2', '\x2', '\x2', 
		'O', 'P', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\a', '\f', '\x2', '\x2', 'R', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'S', 'U', '\n', '\x4', '\x2', '\x2', 'T', 'S', '\x3', '\x2', '\x2', '\x2', 
		'U', 'V', '\x3', '\x2', '\x2', '\x2', 'V', 'T', '\x3', '\x2', '\x2', '\x2', 
		'V', 'W', '\x3', '\x2', '\x2', '\x2', 'W', '\x10', '\x3', '\x2', '\x2', 
		'\x2', 'X', 'Z', '\t', '\x3', '\x2', '\x2', 'Y', 'X', '\x3', '\x2', '\x2', 
		'\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', '[', 'Y', '\x3', '\x2', '\x2', 
		'\x2', '[', '\\', '\x3', '\x2', '\x2', '\x2', '\\', '\x12', '\x3', '\x2', 
		'\x2', '\x2', ']', '_', '\t', '\x3', '\x2', '\x2', '^', ']', '\x3', '\x2', 
		'\x2', '\x2', '_', '\x62', '\x3', '\x2', '\x2', '\x2', '`', '^', '\x3', 
		'\x2', '\x2', '\x2', '`', '\x61', '\x3', '\x2', '\x2', '\x2', '\x61', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', '\x2', '\x2', 
		'\x2', '\x63', 'g', '\a', '%', '\x2', '\x2', '\x64', '\x66', '\n', '\x5', 
		'\x2', '\x2', '\x65', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 'i', 
		'\x3', '\x2', '\x2', '\x2', 'g', '\x65', '\x3', '\x2', '\x2', '\x2', 'g', 
		'h', '\x3', '\x2', '\x2', '\x2', 'h', 'j', '\x3', '\x2', '\x2', '\x2', 
		'i', 'g', '\x3', '\x2', '\x2', '\x2', 'j', 'k', '\b', '\n', '\x2', '\x2', 
		'k', '\x14', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', 'I', '\x2', '\x2', 
		'm', 'n', '\a', 'k', '\x2', '\x2', 'n', 'o', '\a', 'x', '\x2', '\x2', 
		'o', 'p', '\a', 'g', '\x2', '\x2', 'p', 'q', '\a', 'p', '\x2', '\x2', 
		'q', 'r', '\a', '\"', '\x2', '\x2', 'r', '\x16', '\x3', '\x2', '\x2', 
		'\x2', 's', 't', '\a', 'Y', '\x2', '\x2', 't', 'u', '\a', 'j', '\x2', 
		'\x2', 'u', 'v', '\a', 'g', '\x2', '\x2', 'v', 'w', '\a', 'p', '\x2', 
		'\x2', 'w', 'x', '\a', '\"', '\x2', '\x2', 'x', '\x18', '\x3', '\x2', 
		'\x2', '\x2', 'y', 'z', '\a', 'V', '\x2', '\x2', 'z', '{', '\a', 'j', 
		'\x2', '\x2', '{', '|', '\a', 'g', '\x2', '\x2', '|', '}', '\a', 'p', 
		'\x2', '\x2', '}', '~', '\a', '\"', '\x2', '\x2', '~', '\x1A', '\x3', 
		'\x2', '\x2', '\x2', '\x7F', '\x80', '\a', '\x43', '\x2', '\x2', '\x80', 
		'\x81', '\a', 'p', '\x2', '\x2', '\x81', '\x82', '\a', '\x66', '\x2', 
		'\x2', '\x82', '\x83', '\a', '\"', '\x2', '\x2', '\x83', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x2', '@', '\x46', 'K', 'O', 'V', '[', '`', 
		'g', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AutoStep.Compiler.Parser
